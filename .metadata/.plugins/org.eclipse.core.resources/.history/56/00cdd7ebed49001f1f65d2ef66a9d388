/**
 ******************************************************************************
 * @file           : main.c
 * @author         : Auto-generated by STM32CubeIDE
 * @brief          : Main program body
 ******************************************************************************
 * @attention
 *
 * <h2><center>&copy; Copyright (c) 2024 STMicroelectronics.
 * All rights reserved.</center></h2>
 *
 * This software component is licensed by ST under BSD 3-Clause license,
 * the "License"; You may not use this file except in compliance with the
 * License. You may obtain a copy of the License at:
 *                        opensource.org/licenses/BSD-3-Clause
 *
 ******************************************************************************
 */

#if !defined(__SOFT_FP__) && defined(__ARM_FP)
  #warning "FPU is not initialized, but the project is compiling for an FPU. Please initialize the FPU before use."
#endif

// =========================================================================================================
// ================================================ INCLUDES ===============================================
// =========================================================================================================
#include "GPIO.h"
#include "LCD/LCD.h"
#include "KEYPAD/KEYPAD.h"
#include "EXTI/EXTI.h"
#include "USART/USART.h"
// =========================================================================================================

int main(void)
{
	RCC_GPIOA_CLK_EN();
	RCC_GPIOB_CLK_EN();
	RCC_GPIOC_CLK_EN();
	RCC_AFIO_CLK_EN();
	UART_Config _uart1;
	_uart1.BaudRate = UART_BaudRate_19200;
	_uart1.HwFlowCtl = UART_HwFlowCtl_NONE;
	_uart1.Parity = UART_Parity__NONE;
	_uart1.Payload_Length = UART_Payload_Length_8B;
	_uart1.StopBits = UART_StopBits__1;


	_uart1.USART_Mode = UART_MODE_TX_RX;

	MCAL_UART_Init(USART1,&_uart1);
	MCAL_UART_GPIO_Set_Pins(USART1);

	uint8 uart_val;

    /* Loop forever */
	while(1)
	{
		MCAL_UART_ReceiveData(USART1, &uart_val, enable);
		MCAL_UART_SendData(USART1, uart_val, enable);
	}
}
